
buildscript {
    defaultTasks 'clean','test','aggregate'
    ext.serenityCoreVersion = '3.3.0'
    repositories {
        mavenCentral()
    }
    defaultTasks 'clean','test','aggregate'
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:3.4.2")
        classpath "net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion"
    }
}


plugins {
    id "net.serenity-bdd.serenity-gradle-plugin" version "${serenityCoreVersion}"
    id 'java'
    id 'eclipse'
    id 'idea'
}



group 'co.com.reliquias.software'
version '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
    logbackVersion = '1.4.10'
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    implementation ("net.serenity-bdd:serenity-core:${serenityCoreVersion}")
    implementation "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-rest-assured:${serenityCoreVersion}"

    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"

    implementation "ch.qos.logback:logback-classic:${logbackVersion}"
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation("io.github.bonigarcia:webdrivermanager:5.5.3")




}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

serenity {
    testRoot = "co.com.retotecnico.automation.runners"
    requirementsBaseDir = "src/test/resources/features"
    // reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = false
test.finalizedBy(aggregate)